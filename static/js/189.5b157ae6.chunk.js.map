{"version":3,"file":"static/js/189.5b157ae6.chunk.js","mappings":"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","sources":["webpack://finances-planner/./src/components/Section/Section.module.scss?893f","components/Section/Section.jsx","data/optionsDefault.js","webpack://finances-planner/./src/components/InputForm/InputForm.module.scss?9101","components/InputForm/InputForm.jsx","webpack://finances-planner/./src/components/ResultForm/ResultForm.module.scss?b712","components/ResultForm/ResultForm.jsx","webpack://finances-planner/./src/components/ModalAddBalance/ModalAddBalance.module.scss?6dbb","components/ModalAddBalance/ModalAddBalance.jsx","services/validateObject.js","webpack://finances-planner/./src/components/PlanInputsList/PlanInputsList.module.scss?e7db","components/PlanInputsList/PlanInputsList.jsx","pages/OwnPlanPage/OwnPlanPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"vectorImg\":\"Section_vectorImg__zw3S9\"};","import s from './Section.module.scss';\n\nconst Section = ({ children }) => {\n  return <section className={s.vectorImg}>{children}</section>;\n};\n\nexport default Section;\n","const optionsDefault = [\n  {\n    title: 'RFP of both spouses, ₴',\n    name: 'salary',\n    type: 'text',\n    placeholder: '75 000',\n  },\n  {\n    title: 'Passive income, months, ₴',\n    name: 'passiveIncome',\n    type: 'text',\n    placeholder: 'Enter text',\n  },\n  {\n    title: 'Savings, ₴',\n    name: 'savings',\n    type: 'text',\n    placeholder: 'Enter text',\n  },\n  {\n    title: 'Specify the cost of your future apartment, ₴',\n    name: 'cost',\n    type: 'text',\n    placeholder: '90 000',\n  },\n  {\n    title: 'Specify the number of sq.m. of your future apartment',\n    name: 'footage',\n    type: 'text',\n    placeholder: 'Enter text',\n  },\n  {\n    title: 'Accumulation, %',\n    name: 'procent',\n    type: 'text',\n    placeholder: 'Enter text',\n  },\n];\n\nexport default optionsDefault;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"InputForm_label__xJ7fv\",\"span\":\"InputForm_span__CqJO7\",\"input\":\"InputForm_input__JQ+ft\",\"error\":\"InputForm_error__h3B-n\"};","import { useSelector } from 'react-redux';\nimport s from './InputForm.module.scss';\nimport { selectorIsPlan } from 'redux/plan/planSelectors';\n\nconst InputForm = ({ onChange, options, values, onBlur, errors = [] }) => {\n  const isPlan = useSelector(selectorIsPlan);\n\n  return (\n    <>\n      {options.map((el, index) => (\n        <label className={s.label} key={el.name}>\n          <span className={s.span}>\n            {index + 1 + '. '}\n            {el.title}\n          </span>\n\n          <input\n            required\n            autoComplete=\"off\"\n            className={s.input}\n            type={el.type}\n            name={el.name}\n            value={values[el?.name] || ''}\n            onChange={onChange}\n            onBlur={onBlur}\n            placeholder={el.placeholder}\n            disabled={el.name === 'savings' && isPlan ? true : false}\n          />\n          {errors.includes(el.name) && (\n            <span className={s.error}> invalid value </span>\n          )}\n        </label>\n      ))}\n    </>\n  );\n};\n\nexport default InputForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"ResultForm_box__BPZG-\",\"title\":\"ResultForm_title__-zEMh\",\"list\":\"ResultForm_list__lvVlU\",\"item\":\"ResultForm_item__qbVxC\",\"text\":\"ResultForm_text__H+eFW\",\"res\":\"ResultForm_res__5W2t1\",\"buttonFits\":\"ResultForm_buttonFits__LFnXS\",\"buttonBalance\":\"ResultForm_buttonBalance__dlb4b\"};","import { useSelector } from 'react-redux';\nimport { selectorStateResult } from 'redux/plan/planSelectors';\nimport { selectorIsBalance } from 'redux/auth/authSelectors';\nimport s from './ResultForm.module.scss';\n\nconst ResultForm = ({ openModal, onClick }) => {\n  const result = useSelector(selectorStateResult);\n  const isBalance = useSelector(selectorIsBalance);\n\n  return (\n    <div className={s.box}>\n      <h2 className={s.title}>You will have an apartment in:</h2>\n      <ul className={s.list}>\n        <li className={s.item}>\n          <p className={s.text}>Number of years</p>\n          <p className={s.res}>{result.year} years</p>\n        </li>\n        <li className={s.item}>\n          <p className={s.text}>Number of months</p>\n          <p className={s.res}>{result.month} months</p>\n        </li>\n        <li className={s.item}>\n          <button className={s.buttonFits} type=\"button\" onClick={onClick}>\n            Fits\n          </button>\n          {!isBalance && (\n            <button\n              className={s.buttonBalance}\n              type=\"button\"\n              onClick={openModal}\n            >\n              Add Balance\n            </button>\n          )}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default ResultForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlayAddIncome\":\"ModalAddBalance_overlayAddIncome__uiJZA\",\"modalWrapper\":\"ModalAddBalance_modalWrapper__5ApL1\",\"modalAddIncome\":\"ModalAddBalance_modalAddIncome__qYqtL\",\"modalInput\":\"ModalAddBalance_modalInput__LRtN4\",\"btnContainer\":\"ModalAddBalance_btnContainer__cUmYC\",\"btnAdd\":\"ModalAddBalance_btnAdd__Bi-8a\",\"btnClose\":\"ModalAddBalance_btnClose__zyVWf\",\"btnSvg\":\"ModalAddBalance_btnSvg__lAcxc\",\"iconClose\":\"ModalAddBalance_iconClose__HAppv\"};","import Icon from 'components/Icon/Icon';\nimport s from './ModalAddBalance.module.scss';\nimport { createPortal } from 'react-dom';\nimport { useCallback, useEffect, useState } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalAddBalance = ({ closeModal, text, onSubmit }) => {\n  const [form, setForm] = useState({\n    balance: '',\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setForm(p => ({ ...p, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(form);\n    closeModal();\n  };\n\n   const closeModalByEscape = useCallback(\n     e => {\n       if (e.code === 'Escape') {\n         closeModal();\n       }\n     },\n     [closeModal]\n   );\n\n   const closeModalOnBackdrop = e => {\n     if (e.target === e.currentTarget) {\n       closeModal();\n     }\n   };\n\n   useEffect(() => {\n     window.addEventListener('keydown', closeModalByEscape);\n\n     return () => {\n       window.removeEventListener('keydown', closeModalByEscape);\n     };\n   }, [closeModalByEscape]);\n\n  return createPortal(\n    <div className={s.overlayAddIncome} onClick={closeModalOnBackdrop}>\n      <div className={s.modalWrapper}>\n        <form className={s.modalAddIncome} onSubmit={handleSubmit}>\n          <input\n            required\n            className={s.modalInput}\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"balance\"\n            placeholder={text}\n            value={form.balance}\n            onChange={handleChange}\n            pattern=\"[0-9]*\"\n          />\n\n          <div className={s.btnContainer}>\n            <button className={s.btnAdd} type=\"submit\">\n              Add\n            </button>\n            <button className={s.btnClose} type=\"button\" onClick={closeModal}>\n              Cancel\n            </button>\n          </div>\n        </form>\n        <button className={s.btnSvg} onClick={closeModal}>\n          <Icon\n            name=\"icon-close\"\n            width={24}\n            height={24}\n            className={s.iconClose}\n          />\n        </button>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default ModalAddBalance;\n","function validateObject(obj) {\n  const errors = [];\n\n  for (let key in obj) {\n    if (!validateNumber(obj[key])) {\n      errors.push(key);\n    }\n\n    if (key === 'procent' && obj[key] > 100) {\n      errors.push(key);\n    }\n  }\n\n  if (errors.length > 0) {\n    return { isValid: false, errors };\n  }\n\n  return { isValid: true };\n}\n\nfunction validateNumber(value) {\n  if (typeof value === 'number') {\n    value = value.toString();\n  }\n  if (typeof value !== 'string') return false;\n  const trimmedValue = value.trim();\n  if (!trimmedValue) return false;\n  const regex = /^[+-]?\\d+(\\.\\d+)?$/;\n  if (!regex.test(trimmedValue)) return false;\n  const parsedValue = parseFloat(trimmedValue);\n  if (parsedValue <= 0) return false;\n  if (parsedValue !== parseFloat(value)) return false;\n  return true;\n}\n\nexport default validateObject;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PlanInputsList_form__Oi2eI\",\"p\":\"PlanInputsList_p__bnCRJ\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectorIsPlan,\n  selectorPlanIsLoading,\n  selectorStatePlan,\n} from 'redux/plan/planSelectors';\nimport {\n  calcPersonalPlan,\n  preCalcPersonalPlan,\n  updatePersonalPlan,\n} from 'redux/plan/planOperations';\nimport optionsDefault from 'data/optionsDefault';\nimport InputForm from 'components/InputForm/InputForm';\nimport ResultForm from 'components/ResultForm/ResultForm';\nimport ModalAddBalance from 'components/ModalAddBalance/ModalAddBalance';\nimport { addUserBalance } from 'redux/auth/authOperations';\nimport { selectorIsLoggedIn } from 'redux/auth/authSelectors';\nimport validateObject from 'services/validateObject';\nimport s from './PlanInputsList.module.scss';\nimport Loader from 'components/Loader/Loader';\n\nconst PlanInputsList = () => {\n  const dispatch = useDispatch();\n  const formData = useSelector(selectorStatePlan);\n  const isLoggedIn = useSelector(selectorIsLoggedIn);\n  const isLoading = useSelector(selectorPlanIsLoading);\n  const [inputs, setInputs] = useState(formData);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isBlurDirty, setIsBlurDirty] = useState(false);\n  const [isFitsDirty, setIsFitsDirty] = useState(false);\n  const [error, setError] = useState([]);\n  const isPlan = useSelector(selectorIsPlan);\n\n  useEffect(() => {\n    isLoggedIn && setInputs(formData);\n  }, [formData, isLoggedIn]);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(values => {\n      const newInputs = { ...values, [name]: value };\n      setIsBlurDirty(true);\n      setIsFitsDirty(true);\n      return newInputs;\n    });\n  };\n\n  const isValidObjFunc = () => {\n    const { isValid, errors } = validateObject(inputs);\n    return { isValid, errors };\n  };\n\n  const handlerBlur = () => {\n    const isComplete = Object.values(inputs).every(value => value !== '');\n\n    const { isValid, errors } = isValidObjFunc();\n    isComplete && setError(errors);\n\n    if (isComplete && isValid && isBlurDirty) {\n      for (let key in inputs) {\n        if (typeof inputs[key] === 'string') {\n          inputs[key] = Number(inputs[key]);\n        }\n      }\n\n      dispatch(preCalcPersonalPlan(inputs));\n      setIsBlurDirty(false);\n    }\n  };\n\n  const handleAddBalance = dataForm => {\n    const pBalance = { balance: Number(dataForm.balance) };\n    dispatch(addUserBalance(pBalance));\n  };\n\n  const handleFits = () => {\n    const { isValid } = isValidObjFunc();\n\n    if (isValid && !isPlan) {\n      dispatch(calcPersonalPlan(inputs));\n    } else if (isValid && isFitsDirty) {\n      dispatch(updatePersonalPlan(inputs));\n      setIsFitsDirty(false);\n    }\n  };\n\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <form className={s.form}>\n        <InputForm\n          onChange={handleChange}\n          options={optionsDefault}\n          values={inputs}\n          onBlur={handlerBlur}\n          errors={error}\n        />\n      </form>\n\n      <p className={s.p}>\n        Specify the percentage that you would like to accumulate per month from\n        the total amount of income and you will see when you reach the goal\n      </p>\n\n      <ResultForm openModal={openModal} onClick={handleFits} />\n\n      {isModalOpen && (\n        <ModalAddBalance\n          text=\"Enter balance\"\n          closeModal={closeModal}\n          onSubmit={handleAddBalance}\n        />\n      )}\n    </>\n  );\n};\n\nexport default PlanInputsList;\n","import Container from 'components/Container/Container';\nimport PlanInputsList from 'components/PlanInputsList/PlanInputsList';\nimport Section from 'components/Section/Section';\n\nconst OwnPlanPage = () => {\n  return (\n    <Section>\n      <Container>\n        <PlanInputsList />\n      </Container>\n    </Section>\n  );\n};\n\nexport default OwnPlanPage;\n"],"names":["_ref","children","_jsx","className","s","title","name","type","placeholder","onChange","options","values","onBlur","_ref$errors","errors","isPlan","useSelector","selectorIsPlan","_Fragment","map","el","index","_jsxs","required","autoComplete","value","disabled","includes","openModal","onClick","result","selectorStateResult","isBalance","selectorIsBalance","year","month","modalRoot","document","querySelector","closeModal","text","onSubmit","_useState","useState","balance","_useState2","_slicedToArray","form","setForm","closeModalByEscape","useCallback","e","code","useEffect","window","addEventListener","removeEventListener","createPortal","target","currentTarget","preventDefault","_e$target","p","_objectSpread","_defineProperty","pattern","Icon","width","height","validateNumber","toString","trimmedValue","trim","test","parsedValue","parseFloat","obj","key","push","length","isValid","dispatch","useDispatch","formData","selectorStatePlan","isLoggedIn","selectorIsLoggedIn","isLoading","selectorPlanIsLoading","inputs","setInputs","_useState3","_useState4","isModalOpen","setIsModalOpen","_useState5","_useState6","isBlurDirty","setIsBlurDirty","_useState7","_useState8","isFitsDirty","setIsFitsDirty","_useState9","_useState10","error","setError","isValidObjFunc","_validateObject","validateObject","Loader","InputForm","newInputs","optionsDefault","isComplete","Object","every","_isValidObjFunc","Number","preCalcPersonalPlan","ResultForm","calcPersonalPlan","updatePersonalPlan","ModalAddBalance","dataForm","pBalance","addUserBalance","Section","Container","PlanInputsList"],"sourceRoot":""}