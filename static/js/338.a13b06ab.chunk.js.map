{"version":3,"file":"static/js/338.a13b06ab.chunk.js","mappings":"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","sources":["components/DateComp/DateComp.jsx","webpack://finances-planner/./src/components/Dynamics/Chart.module.scss?52aa","services/dynamics/chartOptions.js","redux/dynamics/dynamicsVariables.js","components/Dynamics/Chart.jsx","webpack://finances-planner/./src/components/Dynamics/Info.module.scss?4537","components/Dynamics/OutsideKlicker.jsx","webpack://finances-planner/./src/components/ModalHooray/ModalHooray.module.scss?4e6d","components/ModalHooray/ModalHooray.jsx","components/Dynamics/Info.jsx","webpack://finances-planner/./src/pages/DynamicsPage/DynamicsPage.module.scss?258c","pages/DynamicsPage/DynamicsPage.jsx"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './DateComp.scss';\nimport Icon from 'components/Icon/Icon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getCategoriesStat,\n  getTransaction,\n} from 'redux/transactions/transactionsOperations';\nimport { useLocation } from 'react-router-dom';\nimport { selectorIsLoggedIn } from 'redux/auth/authSelectors';\nimport clsx from 'clsx';\nimport { getDynamicsByMonth } from 'redux/dynamics/dynamicsOperations';\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst DateComp = () => {\n  const dispatch = useDispatch();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const isLoggedIn = useSelector(selectorIsLoggedIn);\n  const location = useLocation();\n  const [isDirty, setIsDirty] = useState(false);\n\n  const isDynamicsPage = location.pathname.endsWith('dynamics');\n\n  useEffect(() => {\n    if (location.pathname.endsWith('transactions')) {\n      isLoggedIn && dispatch(getTransaction(changedDateForApi(selectedDate)));\n    }\n    if (location.pathname.endsWith('categories')) {\n      isLoggedIn &&\n        dispatch(getCategoriesStat(changedDateForApi(selectedDate)));\n    }\n    if (location.pathname.endsWith('dynamics')) {\n      isLoggedIn &&\n        dispatch(getDynamicsByMonth(changedDateForApi(selectedDate)));\n    }\n  }, [isLoggedIn, dispatch, location.pathname, selectedDate]);\n\n  const changedDateForPicker = newDate => {\n    const month = newDate.getMonth();\n    const year = newDate.getFullYear();\n    return `${months[month]}, ${year}`;\n  };\n\n  const changedDateForApi = newDate => {\n    const month = newDate.getMonth();\n    const year = newDate.getFullYear();\n    return { year, month: month + 1 };\n  };\n\n  const handleCloseCalendar = date => {\n    if (isDirty) {\n      return;\n    }\n    if (location.pathname.endsWith('transactions')) {\n      dispatch(getTransaction(changedDateForApi(date)));\n    }\n    if (location.pathname.endsWith('categories')) {\n      dispatch(getCategoriesStat(changedDateForApi(date)));\n    }\n    if (isDynamicsPage) {\n      dispatch(getDynamicsByMonth(changedDateForApi(date)));\n    }\n    setIsDirty(true);\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    setIsDirty(true);\n  }\n\n  return (\n    <div\n      className={clsx('calendarWrap', isDynamicsPage && 'calendarDynamicsWrap')}\n    >\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => handleDateChange(date)} // используем setSelectedDate, чтобы обновлять значение выбранной даты\n        value={changedDateForPicker(selectedDate)}\n        onCalendarClose={() => handleCloseCalendar(selectedDate)}\n        maxDate={new Date()}\n        dateFormat=\"MM/yyyy\"\n        showMonthYearPicker\n      />\n      <Icon\n        name={!isDynamicsPage ? 'icon-calendar' : 'icon-vector-down'}\n        width={'24'}\n        height={'24'}\n        className={'icon-calendar'}\n        secondaryClassName={'icon-claendar-dynamics'}\n      />\n    </div>\n  );\n};\n\nexport default DateComp;\n","// extracted by mini-css-extract-plugin\nexport default {\"dynamicsChartContainer\":\"Chart_dynamicsChartContainer__l5JKW\",\"title\":\"Chart_title__eAN-E\",\"list\":\"Chart_list__C+uqb\",\"listItem\":\"Chart_listItem__dTZyR\",\"chartContainer\":\"Chart_chartContainer__AKMWK\",\"select\":\"Chart_select__VD3be\",\"statList\":\"Chart_statList__YMJpy\",\"statListItem\":\"Chart_statListItem__4USfE\",\"itemTitle\":\"Chart_itemTitle__1AXCy\",\"itemNum\":\"Chart_itemNum__1A-8B\",\"errorItem\":\"Chart_errorItem__BDI6B\"};","export const optionsPhone = {\n    chartArea:{\n      bottom: 5\n    },\n    maintainAspectRatio: false,\n    categoryPercentage: 0.75,\n    barPercentage: 0.5,\n    indexAxis: 'y',\n    borderRadius: 6,\n    elements: {\n      bar: {\n        borderWidth: 0,\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n        labels: {\n          font: {\n              size: 16,\n          },\n      }\n      },\n      title: {\n        display: false,\n      },\n    },\n    layout:{\n      padding: {\n        left: 40\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        grid: {\n          display: false,\n          borderColor: 'white',\n          borderWidth: 2,\n        },\n        border: {\n          display: false,\n        },\n        ticks: {\n          color: '#F3F3F3',\n          padding: 0,\n          backdropPadding: 0,\n          font: {\n            size: 12,\n          },\n        },\n        gridLines: {\n          tickMarkLength: 10\n       },\n       position:{\n        y: -0.75\n       }\n      },\n      x: {\n        grid: {\n          color: 'rgba(243, 243, 243, 0.2)',\n          offset: false,\n          tickLength: 13,\n          tickBorderDash: [3, 10],\n        },\n        border:{\n          display: false,\n          dash: [8, 10],\n        },\n        ticks: {\n          color: '#F3F3F3',\n        },\n        position: 'top',\n\n      }\n    },\n    labels: {\n      fontColor: '#F3F3F3'\n    },\n  };\n\n  export const optionsTablet = {\n    chartArea:{\n      bottom: 5\n    },\n    maintainAspectRatio: false,\n    categoryPercentage: 0.75,\n    barPercentage: 0.5,\n    indexAxis: 'x',\n    borderRadius: 6,\n    elements: {\n      bar: {\n        borderWidth: 0,\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n        labels: {\n          font: {\n              size: 16,\n          },\n      }\n      },\n      title: {\n        display: false,\n      },\n    },\n    layout:{\n      padding: {\n        left: 0\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        grid: {\n          display: true,\n          offset: false,\n          color: 'rgba(243, 243, 243, 0.2)',\n          tickLength: 10,\n          tickBorderDash: [3, 10],\n        },\n        border: {\n          display: true,\n          dash: [8, 10],\n        },\n        ticks: {\n          color: '#F3F3F3',\n          backdropPadding: 0,\n          font: {\n            size: 12,\n            family: 'Lato',\n            weight: 400,\n          },\n        },\n        gridLines: {\n          tickMarkLength: 10\n        },\n      },\n      x: {\n        grid: {\n          display: false,\n          color: 'rgba(243, 243, 243, 0.2)',\n          offset: false,\n          tickLength: 10,\n        },\n        border:{\n          display: false,\n          dash: [8, 10],\n        },\n        ticks: {\n          color: '#F3F3F3',\n          font: {\n            size: 12,\n            family: 'Lato',\n            weight: 400,\n          },\n        },\n      }\n    },\n  }","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectDynamics = state => state.dynamics;\nexport const selectStatByYear = state => state.dynamics.statByYear;\nexport const selectStatByMonth = state => state.dynamics.statByMonth;\nexport const selectAccumToOneMoreMeters = state => state.dynamics.accumToOneMoreMeters;\nexport const selectAccumulatedProc = state => state.dynamics.accumulatedProc;\nexport const selectAccumulatedUah = state => state.dynamics.accumulatedUah;\nexport const selectFlatImage = state => state.dynamics.flatImage;\nexport const selectMonth = state => state.dynamics.month;\nexport const selectSquareMeters = state => state.dynamics.squareМeters;\nexport const selectYear = state => state.dynamics.year;\nexport const selectDynamicsPlanFootage = state => state.ownPlan.plan.footage;\nexport const selectDynamicsPlanCost = state => state.ownPlan.plan.cost;\n\nexport const selectorOneMoreMeterCost = createSelector(\n  [selectAccumulatedUah, selectDynamicsPlanFootage, selectDynamicsPlanCost],\n  (accumulatedUah, footage, cost) => {\n    const oneSquareMeterCost = cost / footage;\n    const oneMoreMeterCost =\n      oneSquareMeterCost > accumulatedUah\n        ? oneSquareMeterCost - accumulatedUah\n        : oneSquareMeterCost - (accumulatedUah % oneSquareMeterCost);\n\n    return oneMoreMeterCost === 0 ? oneSquareMeterCost : oneMoreMeterCost;\n  }\n);\n","import { \n    Chart as ChartJS, \n    ArcElement, \n    Tooltip, \n    Legend, \n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title\n} from \"chart.js\";\nimport { Bar } from 'react-chartjs-2';\nimport { useRef, useEffect, useMemo } from 'react';\nimport style from './Chart.module.scss';\nimport { optionsPhone, optionsTablet } from 'services/dynamics/chartOptions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getDynamics } from 'redux/dynamics/dynamicsOperations';\nimport {\n  selectStatByMonth,\n  selectStatByYear,\n} from 'redux/dynamics/dynamicsVariables';\nimport { selectorIsLoggedIn } from 'redux/auth/authSelectors';\nimport DateComp from '../DateComp/DateComp';\nimport { useMediaQuery } from 'react-responsive';\n\nChartJS.register(\n  ArcElement,\n  Tooltip,\n  Legend,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title\n);\n\nexport const Chart = () => {\n  const matchesTablet = useMediaQuery({ query: '(min-width: 768px)' });\n  const dispatch = useDispatch();\n  const chartRef = useRef(null);\n  const isLoggedIn = useSelector(selectorIsLoggedIn);\n  const statByYear = useSelector(selectStatByYear);\n  const statByMonth = useSelector(selectStatByMonth);\n  const { income, expense, accumulated, plan, planInProcent } = statByMonth;\n\n  const labels = useMemo(() => {\n    return [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ];\n  }, []);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(getDynamics());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  const data = useMemo(() => {\n    return {\n      labels,\n      datasets: [\n        {\n          data: labels.map((_, i) => {\n            for (let elem of statByYear) {\n              let accumulated = elem.income - elem.expense;\n              if (i + 1 === +elem.month) {\n                return accumulated >= 0 ? accumulated : 1;\n              }\n            }\n            return 0;\n          }),\n          backgroundColor: '#6359E9',\n        },\n        {\n          data: labels.map((_, i) => {\n            for (let elem of statByYear) {\n              if (i + 1 === +elem.month) {\n                return elem.expense;\n              }\n            }\n            return 0;\n          }),\n          backgroundColor: '#3A6AF5',\n        },\n        {\n          data: labels.map((_, i) => {\n            for (let elem of statByYear) {\n              if (i + 1 === +elem.month) {\n                return elem.income;\n              }\n            }\n            return 0;\n          }),\n          backgroundColor: '#F3F3F3',\n        },\n      ],\n    };\n  }, [labels, statByYear]);\n\n  return (\n    <div className={style.dynamicsChartContainer}>\n      <h1 className={style.title}>Dynamics of expenses and savings</h1>\n      <ul className={style.list}>\n        <li className={style.listItem}>Accumulated</li>\n        <li className={style.listItem}>Expenses</li>\n        <li className={style.listItem}>Income</li>\n      </ul>\n\n      {matchesTablet ? (\n        <div className={style.chartContainer}>\n          <Bar\n            ref={chartRef}\n            options={optionsTablet}\n            data={data}\n            height={'100%'}\n            width={'100%'}\n          />\n        </div>\n      ) : (\n        <>\n          <div className={style.chartContainer}>\n            <Bar\n              ref={chartRef}\n              options={optionsPhone}\n              data={data}\n              height={'100%'}\n              width={'100%'}\n            />\n          </div>\n        </>\n      )}\n      <div className={style.statContainer}>\n        <DateComp />\n        {statByMonth === 'no transactions for this period' ? (\n          <p className={style.errorItem}>No information for this period</p>\n        ) : (\n          <ul className={style.statList}>\n            <li className={style.statListItem}>\n              <p className={style.itemTitle}>Income, &#8372;</p>\n              <p className={style.itemNum}>{income ? income : 0}</p>\n            </li>\n            <li className={style.statListItem}>\n              <p className={style.itemTitle}>Expenses, &#8372;</p>\n              <p className={style.itemNum}>{expense ? expense : 0}</p>\n            </li>\n            <li className={style.statListItem}>\n              <p className={style.itemTitle}>Accumulated, &#8372;</p>\n              <p className={style.itemNum}>{accumulated ? accumulated : 0}</p>\n            </li>\n            <li className={style.statListItem}>\n              <p className={style.itemTitle}>Plan, &#8372;</p>\n              <p className={style.itemNum}>{plan ? plan : 0}</p>\n            </li>\n            <li className={style.statListItem}>\n              <p className={style.itemTitle}>Plan, %</p>\n              <p className={style.itemNum}>\n                {isNaN(parseInt(planInProcent)) || planInProcent === null\n                  ? '0'\n                  : parseInt(planInProcent)}\n              </p>\n            </li>\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"infoContainer\":\"Info_infoContainer__Lmpcd\",\"title\":\"Info_title__euRFB\",\"list\":\"Info_list__TyBOA\",\"item\":\"Info_item__nT5Sh\",\"text\":\"Info_text__52E5-\",\"num\":\"Info_num__bHqjF\",\"barTitle\":\"Info_barTitle__zB1yE\",\"bar\":\"Info_bar__3VkbB\",\"barFill\":\"Info_barFill__SQkUC\",\"imageElement\":\"Info_imageElement__izvFD\",\"imageContainer\":\"Info_imageContainer__Gx+9j\",\"image\":\"Info_image__yi7O7\",\"imageBtn\":\"Info_imageBtn__JnSA4\",\"accRemain\":\"Info_accRemain__a01X5\",\"accTitleContainer\":\"Info_accTitleContainer__5lwC9\",\"accTitle\":\"Info_accTitle__pFO9i\",\"accSpan\":\"Info_accSpan__RdcDJ\",\"accNum\":\"Info_accNum__qbWlE\",\"svgContainer\":\"Info_svgContainer__WtBiO\"};","import React, { useEffect, useRef } from \"react\";\n\nexport function OutsideClicker(props) {\n  const wrapperRef = useRef(null);\n  // eslint-disable-next-line\n  let { trigger, setTrigger } = props;\n\n  function useOutsideAlerter(ref) {\n    useEffect(() => {\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          setTrigger((trigger = true));\n        }\n      }\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [ref]);\n  }\n\n  useOutsideAlerter(wrapperRef);\n\n  return <div ref={wrapperRef}>{props.children}</div>;\n}","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"ModalHooray_overlay__Pjm6L\",\"modalWrap\":\"ModalHooray_modalWrap__6L4y9\",\"title\":\"ModalHooray_title__fVu1m\",\"text\":\"ModalHooray_text__iQO3v\",\"bcgLeft\":\"ModalHooray_bcgLeft__TzbkH\",\"bcgRight\":\"ModalHooray_bcgRight__4-6Fq\",\"btnClose\":\"ModalHooray_btnClose__5IVAL\"};","import Icon from 'components/Icon/Icon';\nimport s from './ModalHooray.module.scss';\nimport { createPortal } from 'react-dom';\nimport { useCallback, useEffect } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalHooray = ({ closeModal }) => {\n\n  const closeModalByEscape = useCallback(\n    e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    },\n    [closeModal]\n  );\n\n  const closeModalOnBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', closeModalByEscape);\n\n    return () => {\n      window.removeEventListener('keydown', closeModalByEscape);\n    };\n  }, [closeModalByEscape]);\n\n\n\n  return createPortal(\n    <div className={s.overlay} onClick={closeModalOnBackdrop}>\n      <div className={s.modalWrap}>\n        <button className={s.btnClose} onClick={() => closeModal()}>\n          <Icon name=\"icon-close\" width={24} height={24} fill={'white'} />\n        </button>\n        <h3 className={s.title}>Hooray! Congratulations!</h3>\n        <p className={s.text}>\n          You did it! <br />\n          We are so proud of you and wish you all the best as you embark on this\n          exciting new chapter of your life.\n        </p>\n        <div className={s.bcgLeft} />\n        <div className={s.bcgRight} />\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default ModalHooray;\n\n//* для компонента, звідки модалка викликатиметься -->\n//\n//  const [isModalOpen, setIsModalOpen] = useState(false);\n// const openModal = () => setIsModalOpen(true);\n// const closeModal = () => setIsModalOpen(false);\n\n//* в розмітку компонента return -->\n// {isModalOpen && (\n// <ModalHooray closeModal={closeModal} />\n// )}\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./Info.module.scss\";\nimport { useDropzone } from \"react-dropzone\";\nimport { postImage } from \"redux/dynamics/dynamicsOperations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useMemo } from \"react\";\nimport { selectorIsPlanFootage, selectorStatePlan } from \"redux/plan/planSelectors\";\nimport { \n    selectAccumulatedProc,\n    selectAccumulatedUah,\n    selectFlatImage, \n    selectMonth,\n    selectSquareMeters,\n    selectYear,\n    selectorOneMoreMeterCost, \n } from \"redux/dynamics/dynamicsVariables\";\n import { OutsideClicker } from \"./OutsideKlicker\";\nimport Icon from \"components/Icon/Icon\";\nimport ModalHooray from 'components/ModalHooray/ModalHooray';\nimport { selectorIsLoggedIn } from 'redux/auth/authSelectors';\n\nconst baseStyle = {\n  width: '87%',\n  height: '87%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 10,\n  borderColor: 'rgba(255, 255, 255, 0.2)',\n  borderStyle: 'dashed',\n  backgroundColor: 'rgba(110, 110, 110, 0.2)',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n};\n\nexport const Info = props => {\n  const accumulatedProc = useSelector(selectAccumulatedProc);\n  const isLoggedIn = useSelector(selectorIsLoggedIn);\n  const accumulatedUah = useSelector(selectAccumulatedUah);\n  const flatImage = useSelector(selectFlatImage);\n  const month = useSelector(selectMonth);\n  const squareMeters = useSelector(selectSquareMeters);\n  const year = useSelector(selectYear);\n  const plan = useSelector(selectorStatePlan);\n  const isPlan = useSelector(selectorIsPlanFootage);\n  const oneMoreMeterCost = useSelector(selectorOneMoreMeterCost);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: {\n      'image/jpeg': [],\n      'image/png': [],\n    },\n  });\n  let [trigger, setTrigger] = useState(true);\n  const dispatch = useDispatch();\n  const file = acceptedFiles;\n\n  useEffect(() => {\n    if (file.length > 0) {\n      const formData = new FormData();\n      formData.append('image', acceptedFiles[0]);\n      dispatch(postImage(formData));\n    }\n  }, [acceptedFiles, file.length, dispatch, trigger]);\n\n  useEffect(() => {\n    if (isPlan && isLoggedIn && Number(squareMeters) >= plan.footage) {\n      setIsModalOpen(true);\n    }\n  }, [plan.footage, squareMeters, isLoggedIn, isPlan]);\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n    }),\n    []\n  );\n\n  function percentage() {\n    const percentageCounted = (squareMeters / plan.footage) * 100;\n    return percentageCounted >= 100 ? `${100}%` : `${percentageCounted}%`;\n  }\n\n  function imageHandler() {\n    if (!flatImage) setTrigger(false);\n    return;\n  }\n\n  function compareNumbers(a, b) {\n    return a > b ? b : a;\n  }\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  function hideImgButton () {\n    return trigger ? 'visible' : 'hidden';\n  }\n\n  return (\n    <>\n      {isModalOpen && <ModalHooray closeModal={closeModal} />}\n      <div className={styles.infoContainer}>\n        <div className={styles.accumulated}>\n          <p className={styles.title}>\n            {/* After {year ? 0 : year} years {month ? 0 : month} month */}\n            After {(accumulatedUah >= plan.cost) ? 0 : year} {`${' '}`}\n             years {(accumulatedUah >= plan.cost) ? 0 : month} month\n          </p>\n          <ul className={styles.list}>\n            <li className={styles.item}>\n              <p className={styles.text}>Accumulated, %:</p>\n              <p className={styles.num}>\n                {compareNumbers(accumulatedProc, 100)}%\n              </p>\n            </li>\n            <li className={styles.item}>\n              <p className={styles.text}>Accumulated, UAH:</p>\n              <p className={styles.num}>\n                {compareNumbers(accumulatedUah, plan.cost)} &#8372;\n              </p>\n            </li>\n            <li className={styles.item}>\n              <p className={styles.text}>And This:</p>\n              <p className={styles.num}>\n                {squareMeters >= plan.footage ? plan.footage : squareMeters}{' '}\n                sq.m\n              </p>\n            </li>\n          </ul>\n\n          <p className={styles.barTitle}>\n            {compareNumbers(squareMeters, plan.footage)} out of {plan.footage}{' '}\n            sq.m accumulated\n          </p>\n          <div className={styles.bar}>\n            <div\n              className={styles.barFill}\n              style={{ width: percentage() }}\n            ></div>\n          </div>\n        </div>\n\n        <div className={styles.imageElement}>\n            <OutsideClicker trigger={trigger} setTrigger={setTrigger}>\n            {trigger ? (\n                <div className={styles.imageContainer} onClick={imageHandler}>\n                    {flatImage ? (\n                        <>\n                        <img\n                            className={styles.image}\n                            src={flatImage}\n                            alt=\"flat plan\"\n                        ></img>\n                        {/* <p\n                            className={styles.imageBtn}\n                            onClick={() => setTrigger(false)}\n                        >\n                            Change image\n                        </p> */}\n                        {/* <p className={styles.imageBtn}>Change image</p> */}\n                        </>\n                    ) : (\n                        <Icon name={'icon-photo-camera'} width={100} height={100} />\n                    )}\n                </div>\n            ) : (\n                <div className={styles.imageContainer}>\n                <div {...getRootProps({ style })}>\n                    <input {...getInputProps()} />\n                    <p>Drag 'n' drop some files here, or click to select files</p>\n                    <em>(Only *.jpeg and *.png images will be accepted)</em>\n                </div>\n                </div>\n            )}\n            </OutsideClicker>\n            <p className={styles.imageBtn} style={{visibility: hideImgButton()}} onClick={()=> setTrigger(false)}>Change image</p>\n        </div>\n\n      </div>\n      <div className={styles.accRemain}>\n        <div className={styles.accTitleContainer}>\n          <p className={styles.accTitle}>\n            To add more <span className={styles.accSpan}>1 sq.m</span> for\n            planning, it remains to accumulate\n          </p>\n          <p className={styles.accNum}>\n            {squareMeters >= plan.footage ? 0 : Math.round(oneMoreMeterCost)}{' '}\n            &#8372;\n          </p>\n        </div>\n        <div className={styles.svgContainer}></div>\n      </div>\n    </>\n  );\n};  ","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"DynamicsPage_section__gfswJ\"};","import { Chart } from \"components/Dynamics/Chart\";\nimport { Info } from \"components/Dynamics/Info\";\nimport style from './DynamicsPage.module.scss';\n\nconst DynamicsPage = () => {\n  return <section className={style.section}>\n    <Chart/>\n    <Info/>\n  </section>;\n};\n\nexport default DynamicsPage;\n"],"names":["months","dispatch","useDispatch","_useState","useState","Date","_useState2","_slicedToArray","selectedDate","setSelectedDate","isLoggedIn","useSelector","selectorIsLoggedIn","location","useLocation","_useState3","_useState4","isDirty","setIsDirty","isDynamicsPage","pathname","endsWith","useEffect","getTransaction","changedDateForApi","getCategoriesStat","getDynamicsByMonth","newDate","month","getMonth","year","getFullYear","_jsxs","className","clsx","children","_jsx","DatePicker","selected","onChange","date","handleDateChange","value","concat","changedDateForPicker","onCalendarClose","maxDate","dateFormat","showMonthYearPicker","Icon","name","width","height","secondaryClassName","optionsPhone","chartArea","bottom","maintainAspectRatio","categoryPercentage","barPercentage","indexAxis","borderRadius","elements","bar","borderWidth","responsive","plugins","legend","display","labels","font","size","title","layout","padding","left","scales","y","beginAtZero","grid","borderColor","border","ticks","color","backdropPadding","gridLines","tickMarkLength","position","x","offset","tickLength","tickBorderDash","dash","fontColor","optionsTablet","family","weight","selectStatByYear","state","dynamics","statByYear","selectStatByMonth","statByMonth","selectAccumulatedProc","accumulatedProc","selectAccumulatedUah","accumulatedUah","selectFlatImage","flatImage","selectMonth","selectSquareMeters","squareМeters","selectYear","selectorOneMoreMeterCost","createSelector","ownPlan","plan","footage","cost","oneSquareMeterCost","oneMoreMeterCost","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","Title","Chart","matchesTablet","useMediaQuery","query","chartRef","useRef","income","expense","accumulated","planInProcent","useMemo","getDynamics","data","datasets","map","_","i","_step","_iterator","_createForOfIteratorHelper","s","n","done","elem","err","e","f","backgroundColor","_step2","_iterator2","_step3","_iterator3","style","Bar","ref","options","_Fragment","DateComp","isNaN","parseInt","OutsideClicker","props","wrapperRef","setTrigger","trigger","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","modalRoot","querySelector","_ref","closeModal","closeModalByEscape","useCallback","code","window","createPortal","onClick","currentTarget","fill","baseStyle","flexDirection","alignItems","borderStyle","outline","transition","Info","squareMeters","selectorStatePlan","isPlan","selectorIsPlanFootage","isModalOpen","setIsModalOpen","_useDropzone","useDropzone","accept","acceptedFiles","getRootProps","getInputProps","file","length","formData","FormData","append","postImage","Number","_objectSpread","compareNumbers","a","b","ModalHooray","styles","percentageCounted","percentage","src","alt","visibility","Math","round"],"sourceRoot":""}