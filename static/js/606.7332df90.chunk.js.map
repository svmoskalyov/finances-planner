{"version":3,"file":"static/js/606.7332df90.chunk.js","mappings":"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","sources":["components/TransactionSelect/iconsForSelectCategory.js","webpack://finances-planner/./src/pages/StatisticsPage/TransactionsPage/TransactionsItem/TransactionsItem.module.scss?9482","pages/StatisticsPage/TransactionsPage/TransactionsItem/TransactionsItem.jsx","webpack://finances-planner/./src/pages/StatisticsPage/TransactionsPage/Transactions/Transactions.module.scss?5055","pages/StatisticsPage/TransactionsPage/ModalTransactions/ModalTransactions.jsx","pages/StatisticsPage/TransactionsPage/Transactions/Transactions.jsx","redux/Expenses/expensesSelectors.js","redux/transactions/transactionsSelector.js","webpack://finances-planner/./src/components/ModalAddIncome/MoadlAddIncome.module.scss?e566"],"sourcesContent":["import { components } from 'react-select';\nimport Icon from '../Icon/Icon';\nimport c from '../ModalAddIncome/MoadlAddIncome.module.scss';\n\nconst { Option } = components;\n\nexport const IconOption = props => (\n  <Option {...props}>\n    <Icon\n      name={props.data.value}\n      width={18}\n      height={18}\n      secondaryClassName={c.categoryIcon}\n    />\n    {props.data.label}\n  </Option>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"transactionItem\":\"TransactionsItem_transactionItem__I4efX\",\"commentWrapper\":\"TransactionsItem_commentWrapper__NOBZi\",\"transactionThumb\":\"TransactionsItem_transactionThumb__8EK3s\",\"thumb\":\"TransactionsItem_thumb__siEpA\",\"transactionDate\":\"TransactionsItem_transactionDate__i0qAD\",\"transactionComment\":\"TransactionsItem_transactionComment__otRnm\",\"transactionSum\":\"TransactionsItem_transactionSum__heA7p\",\"transactionCategory\":\"TransactionsItem_transactionCategory__udzxZ\",\"buttonThumb\":\"TransactionsItem_buttonThumb__g1kfu\",\"buttonItem\":\"TransactionsItem_buttonItem__xDui1\"};","import moment from 'moment';\nimport Icon from '../../../../components/Icon/Icon';\nimport s from './TransactionsItem.module.scss';\n\nconst TransactionsItem = ({\n  openModal,\n  id,\n  sum,\n  date,\n  category,\n  comment,\n  handleRemoveTransaction,\n}) => {\n  return (\n    <li className={s.transactionItem} key={id}>\n      <div className={s.transactionThumb}>\n        <div className={s.commentWrapper}>\n          <p className={s.transactionDate}>{moment(date).format('MM.YYYY')}</p>\n          <p className={s.transactionComment}>{comment}</p>\n        </div>\n\n        <div>\n          <p className={s.transactionSum}>{sum} â‚´</p>\n        </div>\n      </div>\n      <div className={s.thumb}>\n        <p className={s.transactionCategory}>{category}</p>\n        <div className={s.buttonThumb}>\n          <button\n            className={s.buttonItem}\n            type=\"button\"\n            onClick={() => openModal({ id, sum, date, category, comment })}\n          >\n            <Icon\n              name={'icon-pencil'}\n              width={'22'}\n              height={'22'}\n              className={'icon-pencil'}\n            />\n          </button>\n          <button\n            className={s.buttonItem}\n            type=\"button\"\n            onClick={() => handleRemoveTransaction(id, date)}\n          >\n            <Icon\n              name={'icon-trash'}\n              width={'24'}\n              height={'24'}\n              className={'icon-trash'}\n            />\n          </button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default TransactionsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"transactionList\":\"Transactions_transactionList__76l1J\",\"formWrapper\":\"Transactions_formWrapper__jwN96\",\"formLabel\":\"Transactions_formLabel__k1ayP\",\"formInput\":\"Transactions_formInput__tc3pe\",\"buttonEdit\":\"Transactions_buttonEdit__vYe-K\",\"buttonCloseModal\":\"Transactions_buttonCloseModal__xCCdw\",\"noTransactionWrapper\":\"Transactions_noTransactionWrapper__wWn6x\",\"noTransactionText\":\"Transactions_noTransactionText__ncH1P\",\"dropdown\":\"Transactions_dropdown__TA-WL\",\"options\":\"Transactions_options__100NG\",\"overlayAddIncome\":\"Transactions_overlayAddIncome__YfVME\",\"modalWrapper\":\"Transactions_modalWrapper__BOCR6\",\"select-container\":\"Transactions_select-container__5Hbmj\",\"select__control\":\"Transactions_select__control__xkbTq\",\"select__indicator\":\"Transactions_select__indicator__iPkZ3\",\"select__indicator-separator\":\"Transactions_select__indicator-separator__Ms4mF\",\"select__single-value\":\"Transactions_select__single-value__WzjYT\",\"select__placeholder\":\"Transactions_select__placeholder__8j-CQ\",\"select__value-container\":\"Transactions_select__value-container__iW+Ie\",\"select__menu\":\"Transactions_select__menu__X90wH\",\"select__option\":\"Transactions_select__option__nxnpj\",\"select__option--is-focused\":\"Transactions_select__option--is-focused__Sv2x+\",\"select__option--is-selected\":\"Transactions_select__option--is-selected__8f6jc\",\"labelForSelector\":\"Transactions_labelForSelector__RwlCT\",\"labelText\":\"Transactions_labelText__Vti7J\",\"flex\":\"Transactions_flex__8v7Ld\",\"error\":\"Transactions_error__8eB8D\"};","import { createPortal } from 'react-dom';\nimport s from '../Transactions/Transactions.module.scss';\nimport Icon from 'components/Icon/Icon';\nimport Select from 'react-select';\nimport { useDispatch, useSelector } from 'react-redux';\nimport c from '../../../../components/ModalAddIncome/MoadlAddIncome.module.scss';\nimport { useCallback, useEffect, useState } from 'react';\nimport { categorySelect } from 'redux/Expenses/expensesSelectors';\nimport { updateTransaction } from 'redux/transactions/transactionsOperations';\nimport { IconOption } from 'components/TransactionSelect/iconsForSelectCategory';\nimport { Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { getCategory } from 'redux/Expenses/expensesOperations';\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalTransaction = ({ closeModal, transactionData }) => {\n  const { id, sum, comment, category: newCategory, date: newDate } = transactionData;\n\n  const [currentCategory, setCurrentCategory] = useState(newCategory);\n  const [currentSum] = useState(sum);\n  const [currentComent] = useState(comment);\n\n  const category = useSelector(categorySelect);\n  const dispatch = useDispatch();\n\n\n  const closeModalByEscape = useCallback(\n    e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    },\n    [closeModal]\n  );\n\n  const closeModalOnBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', closeModalByEscape);\n\n    return () => {\n      window.removeEventListener('keydown', closeModalByEscape);\n    };\n  }, [closeModalByEscape]);\n\n  useEffect(() => {\n    dispatch(getCategory());\n  }, [dispatch]);\n\n  const transformCategory = category.map(({ name: value, title: label }) => ({\n    value,\n    label,\n  }));\n\n  const getValue = () => {\n    return currentCategory\n      ? transformCategory.find(c => c.value === currentCategory)\n      : '';\n  };\n\n  const onChange = newValue => {\n    setCurrentCategory(newValue.value);\n  };\n\n  return createPortal(\n    <div className={s.overlayAddIncome} onClick={closeModalOnBackdrop}>\n      <div className={s.modalWrapper}>\n        <Formik\n          initialValues={{\n            type: 'expense',\n            category: currentCategory,\n            comment: !currentComent ? 'no comment' : currentComent,\n            sum: Number(currentSum),\n          }}\n          validationSchema={Yup.object({\n            category: Yup.string().required('Required'),\n            comment: Yup.string()\n              .required('Required')\n              .min(4, 'Must be 4 characters or more')\n              .max(80, 'Must be 80 characters or less'),\n            sum: Yup.number().required('Required'),\n          })}\n          onSubmit={(values, { setSubmitting }) => {\n            const date = new Date(newDate);\n            const year = date.getFullYear();\n            const month = date.getMonth() + 1;\n            dispatch(\n              updateTransaction({\n                id,\n                values: { ...values, category: currentCategory },\n                date: { year, month },\n              })\n            );\n\n            closeModal();\n            setSubmitting(false);\n          }}\n        >\n          {({ errors, touched, values }) => (\n            <Form className={s.formWrapper}>\n              <label className={s.labelForSelector}>\n                <p className={s.labelText}>Per category</p>\n                <Select\n                  onChange={onChange}\n                  value={getValue()}\n                  isSearchable={false}\n                  placeholder={currentCategory}\n                  className=\"select-container\"\n                  classNamePrefix=\"select\"\n                  options={transformCategory}\n                  name=\"category\"\n                  components={{ Option: IconOption }}\n                />\n                <div className={s.options}></div>\n              </label>\n              <div className={s.flex}>\n                <label\n                  className={s.formLabel}\n                  style={{\n                    outline: `${\n                      touched.comment && errors.comment\n                        ? '1px solid red'\n                        : 'none'\n                    }`,\n                  }}\n                >\n                  Expense comment\n                  <Field\n                    className={s.formInput}\n                    type=\"text\"\n                    name=\"comment\"\n                    placeholder=\"Enter comment\"\n                  />\n                  {touched.comment && errors.comment && (\n                    <div className={s.error}>{errors.comment}</div>\n                  )}\n                </label>\n\n                <label\n                  className={s.formLabel}\n                  style={{\n                    outline: `${\n                      touched.sum && errors.sum ? '1px solid red' : 'none'\n                    }`,\n                  }}\n                >\n                  Sum\n                  <Field\n                    className={s.formInput}\n                    type=\"text\"\n                    name=\"sum\"\n                    placeholder=\"00.00\"\n                  />\n                  {touched.sum && errors.sum && (\n                    <div className={s.error}>{errors.sum}</div>\n                  )}\n                </label>\n\n                <div>\n                  <button className={s.buttonEdit} type=\"submit\">\n                    Edit\n                  </button>\n                </div>\n                <button\n                  className={s.buttonCloseModal}\n                  type=\"button\"\n                  onClick={() => closeModal()}\n                >\n                  <Icon\n                    name=\"icon-close\"\n                    width={24}\n                    height={24}\n                    secondaryClassName={c.iconClose}\n                  />\n                </button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\nexport default ModalTransaction;\n","import TransactionsItem from '../TransactionsItem/TransactionsItem';\nimport css from './Transactions.module.scss';\nimport ModalTransaction from '../ModalTransactions/ModalTransactions';\nimport { removeTransaction } from 'redux/transactions/transactionsOperations';\nimport { selectedTransactions } from 'redux/transactions/transactionsSelector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nconst Transactions = () => {\n  const transactions = useSelector(selectedTransactions);\n  const [transactionData, setTransactionData] = useState(null);\n  const dispatch = useDispatch();\n\n  const openModal = (data) => {\n    setTransactionData(data);\n  };\n\n  const closeModal = () => setTransactionData(null);\n\n  const handleRemoveTransaction = (id, newDate) => {\n    const date = new Date(newDate);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    dispatch(removeTransaction({id, date: { year, month }}));\n  };\n\n  return (\n    <>\n      {transactions?.length === 0 ? (\n        <div className={css.noTransactionWrapper}>\n          <p className={css.noTransactionText}>You have no transactions</p>\n        </div>\n      ) : (\n        <ul className={css.transactionList}>\n          {transactions &&\n            transactions.map(({ _id: id, sum, comment, category, date }) => (\n              <TransactionsItem\n                key={id}\n                openModal={openModal}\n                id={id}\n                sum={sum}\n                comment={comment}\n                category={category}\n                date={date}\n                handleRemoveTransaction={handleRemoveTransaction}\n              />\n            ))}\n        </ul>\n      )}\n      {transactionData && (\n        <ModalTransaction\n          closeModal={closeModal}\n          transactionData={transactionData}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Transactions;\n","export const presavingSelect = state => state.expenses.presaving;\nexport const categorySelect = state => state.expenses.category;\nexport const selectorIsCashflowLoading = state => state.expenses.isLoading;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectedTransactions = state => state.statistics.transactions;\nexport const selectedCategoriesStat = state => state.statistics.categoriesStat;\nexport const selectedIsLoading = state => state.statistics.isLoading;\nexport const selectedError = state => state.statistics.error;\n\nexport const selectedChengedCategoriesStat = createSelector(\n  [selectedCategoriesStat],\n  categoriesStat => {\n    const totalSpend = categoriesStat.reduce(\n      (acc, item) => acc + item.amount,\n      0\n    );\n    const updatedCategoriesStat = categoriesStat.map(category => {\n      return {\n        ...category,\n        percentage: ((category.amount / totalSpend) * 100).toFixed(1),\n      };\n    });\n    return updatedCategoriesStat;\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"overlayAddIncome\":\"MoadlAddIncome_overlayAddIncome__1P5D8\",\"modalWrapper\":\"MoadlAddIncome_modalWrapper__TwlUa\",\"modalAddIncome\":\"MoadlAddIncome_modalAddIncome__Od7vw\",\"modalInput\":\"MoadlAddIncome_modalInput__ZH85Z\",\"btnContainer\":\"MoadlAddIncome_btnContainer__ELtRK\",\"btnAdd\":\"MoadlAddIncome_btnAdd__dTtCU\",\"btnClose\":\"MoadlAddIncome_btnClose__nIubc\",\"btnSvg\":\"MoadlAddIncome_btnSvg__Q6jjo\",\"iconClose\":\"MoadlAddIncome_iconClose__owHnM\",\"categoryIcon\":\"MoadlAddIncome_categoryIcon__C4OJV\"};"],"names":["Option","components","IconOption","props","_jsxs","children","_jsx","Icon","name","data","value","width","height","secondaryClassName","c","categoryIcon","label","_ref","openModal","id","sum","date","category","comment","handleRemoveTransaction","className","s","moment","format","type","onClick","modalRoot","document","querySelector","closeModal","transactionData","newCategory","newDate","currentCategory","setCurrentCategory","useState","currentSum","currentComent","useSelector","categorySelect","dispatch","useDispatch","closeModalByEscape","useCallback","e","code","useEffect","window","addEventListener","removeEventListener","getCategory","transformCategory","map","_ref2","title","onChange","newValue","createPortal","target","currentTarget","Formik","initialValues","Number","validationSchema","Yup","required","min","max","onSubmit","values","_ref3","setSubmitting","Date","year","getFullYear","month","getMonth","updateTransaction","_ref4","errors","touched","Form","Select","find","isSearchable","placeholder","classNamePrefix","options","style","outline","Field","iconClose","Transactions","transactions","selectedTransactions","setTransactionData","removeTransaction","_Fragment","length","css","_id","TransactionsItem","ModalTransaction","presavingSelect","state","expenses","presaving","selectorIsCashflowLoading","isLoading","statistics","selectedIsLoading","selectedChengedCategoriesStat","createSelector","categoriesStat","totalSpend","reduce","acc","item","amount","percentage","toFixed"],"sourceRoot":""}