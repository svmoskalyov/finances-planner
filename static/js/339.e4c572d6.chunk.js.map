{"version":3,"file":"static/js/339.e4c572d6.chunk.js","mappings":"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","sources":["webpack://finances-planner/./src/components/Section/Section.module.scss?893f","components/Section/Section.jsx","components/TransactionSelect/iconsForSelectCategory.js","webpack://finances-planner/./src/components/TransactionDataList/TransactionDataList.module.scss?a67d","components/TransactionDataList/TransactionInput.jsx","webpack://finances-planner/./src/components/ExpensesLimits/ExpensesLimits.module.scss?dfa4","components/ExpensesLimits/ExpensesLimits.jsx","components/ModalAddIncome/ModalAddIncome.jsx","components/TransactionSelect/TransactionSelect.jsx","components/TransactionDataList/TransactionDataList.jsx","pages/ExpensesPage/ExpensesPage.jsx","redux/Expenses/expensesSelectors.js","webpack://finances-planner/./src/components/ModalAddIncome/MoadlAddIncome.module.scss?e566"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"vectorImg\":\"Section_vectorImg__zw3S9\"};","import s from './Section.module.scss';\n\nconst Section = ({ children }) => {\n  return <section className={s.vectorImg}>{children}</section>;\n};\n\nexport default Section;\n","import { components } from 'react-select';\nimport Icon from '../Icon/Icon';\nimport c from '../ModalAddIncome/MoadlAddIncome.module.scss';\n\nconst { Option } = components;\n\nexport const IconOption = props => (\n  <Option {...props}>\n    <Icon\n      name={props.data.value}\n      width={18}\n      height={18}\n      secondaryClassName={c.categoryIcon}\n    />\n    {props.data.label}\n  </Option>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TransactionDataList_form__PQet4\",\"lable\":\"TransactionDataList_lable__tgMqy\",\"input\":\"TransactionDataList_input__UYAuz\",\"inputTitle\":\"TransactionDataList_inputTitle__ZMOet\",\"option\":\"TransactionDataList_option__LxNdt\",\"inputWrapper\":\"TransactionDataList_inputWrapper__NCwBF\",\"errorSpan\":\"TransactionDataList_errorSpan__qwVwx\"};","import { Field } from 'formik';\nimport s from './TransactionDataList.module.scss';\n\nconst Input = ({ name, title, placeholder, disabled }) => {\n  return (\n    <label htmlFor={name} className={s.lable}>\n      <p className={s.inputTitle}>{title}</p>\n      <Field\n        className={s.input}\n        type=\"text\"\n        name={name}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    </label>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"expenses\":\"ExpensesLimits_expenses__aXlAh\",\"expensesWrapper\":\"ExpensesLimits_expensesWrapper__pVgmK\",\"list\":\"ExpensesLimits_list__P7L9Z\",\"item\":\"ExpensesLimits_item__z3Vxk\",\"sum\":\"ExpensesLimits_sum__2nfRD\",\"text\":\"ExpensesLimits_text__5Gmts\",\"buttonWrapper\":\"ExpensesLimits_buttonWrapper__Wr4Em\",\"buttonReady\":\"ExpensesLimits_buttonReady__uKK-W\",\"btnModal\":\"ExpensesLimits_btnModal__Ev4l8\"};","import { useSelector } from 'react-redux';\nimport s from './ExpensesLimits.module.scss';\nimport { presavingSelect } from 'redux/Expenses/expensesSelectors';\n\nconst ExpensesLimits = ({ openModal }) => {\n  const { dailyLimit, monthLimit, totalByDay, totalByMounth } =\n    useSelector(presavingSelect);\n\n  const numberWithSpaces = x => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  };\n  return (\n    <div className={s.expenses}>\n      <div className={s.expensesWrapper}>\n        <ul className={s.list}>\n          <li className={s.item}>\n            <p className={s.sum}>\n              {numberWithSpaces(Math.round(dailyLimit - totalByDay))} ₴\n            </p>\n            <p className={s.text}>Daily limit</p>\n          </li>\n          <li className={s.item}>\n            <p className={s.sum}>\n              {numberWithSpaces(Math.round(monthLimit - totalByMounth))} ₴\n            </p>\n            <p className={s.text}>Monthly limit</p>\n          </li>\n        </ul>\n        <div className={s.buttonWrapper}>\n          <button className={s.buttonReady} type=\"submit\">\n            Ready\n          </button>\n          <button className={s.btnModal} type=\"button\" onClick={openModal}>\n            Add income\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesLimits;\n","import Icon from 'components/Icon/Icon';\nimport s from './MoadlAddIncome.module.scss';\nimport { createPortal } from 'react-dom';\nimport { Field, Form, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { postTransaction } from 'redux/Expenses/expensesOperations';\nimport { useCallback, useEffect } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst MoadlAddIncome = ({ closeModal, text }) => {\n  const dispatch = useDispatch();\n  const initialValue = {\n    sum: '',\n  };\n  const handleSubmit = (values, actions) => {\n    dispatch(postTransaction({ sum: values.sum, type: 'income' }));\n    actions.resetForm();\n    closeModal();\n  };\n\n  const closeModalByEscape = useCallback(\n    e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    },\n    [closeModal]\n  );\n\n  const closeModalOnBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', closeModalByEscape);\n\n    return () => {\n      window.removeEventListener('keydown', closeModalByEscape);\n    };\n  }, [closeModalByEscape]);\n\n  return createPortal(\n    <div className={s.overlayAddIncome} onClick={closeModalOnBackdrop}>\n      <div className={s.modalWrapper}>\n        <Formik onSubmit={handleSubmit} initialValues={initialValue}>\n          <Form className={s.modalAddIncome}>\n            <Field\n              className={s.modalInput}\n              type=\"text\"\n              name=\"sum\"\n              placeholder={text}\n            />\n\n            <div className={s.btnContainer}>\n              <button className={s.btnAdd} type=\"submit\">\n                Add\n              </button>\n              <button className={s.btnClose} type=\"button\" onClick={closeModal}>\n                Cancel\n              </button>\n            </div>\n          </Form>\n        </Formik>\n        <button className={s.btnSvg} onClick={closeModal}>\n          <Icon\n            name=\"icon-close\"\n            width={24}\n            height={24}\n            secondaryClassName={s.iconClose}\n          />\n        </button>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default MoadlAddIncome;\n","import Select from 'react-select';\nimport { IconOption } from './iconsForSelectCategory';\n\nconst TransactionSelect = ({ transformCategory, onChange, value }) => {\n  return (\n    <label className=\"labelForSelector\">\n      <p className=\"labelText\">Per category</p>\n      <Select\n        onChange={onChange}\n        value={value}\n        isSearchable={false}\n        placeholder=\"Choose category\"\n        className=\"select-container\"\n        classNamePrefix=\"select\"\n        options={transformCategory}\n        name=\"category\"\n        components={{ Option: IconOption }}\n      />\n    </label>\n  );\n};\n\nexport default TransactionSelect;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport Input from './TransactionInput';\nimport ExpensesLimits from '../ExpensesLimits/ExpensesLimits';\nimport ModalAddIncome from '../ModalAddIncome/ModalAddIncome';\nimport { selectorBalance } from 'redux/auth/authSelectors';\n\nimport { postTransaction } from 'redux/Expenses/expensesOperations';\nimport TransactionSelect from '../TransactionSelect/TransactionSelect';\nimport s from './TransactionDataList.module.scss';\n\nimport {\n  categorySelect,\n  selectorIsCashflowLoading,\n} from 'redux/Expenses/expensesSelectors';\nimport Loader from 'components/Loader/Loader';\n\nconst initialValues = {\n  comment: '',\n  sum: '',\n  category: '',\n};\n\nconst schema = yup.object().shape({\n  comment: yup.string().max(80),\n  sum: yup\n    .number()\n    .positive('enter only a positive number')\n    .required('This field is required'),\n  category: yup.string(),\n});\n\nconst TransactionDataList = () => {\n  const [currentCategory, setCurrentCategory] = useState('other');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const isLoading = useSelector(selectorIsCashflowLoading);\n  const category = useSelector(categorySelect);\n  const balance = useSelector(selectorBalance);\n  const dispatch = useDispatch();\n\n  const transformCategory = category.map(({ name: value, title: label }) => ({\n    value,\n    label,\n  }));\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => setIsModalOpen(false);\n\n  const handleSubmit = (values, actions) => {\n    dispatch(\n      postTransaction({\n        ...values,\n        comment: !values.comment ? 'no comment' : values.comment,\n        sum: Number(values.sum),\n        category: currentCategory,\n        type: 'expense',\n      })\n    );\n\n    actions.resetForm();\n  };\n\n  const getValue = () => {\n    return currentCategory\n      ? transformCategory.find(c => c.value === currentCategory)\n      : '';\n  };\n\n  const onChange = newValue => {\n    setCurrentCategory(newValue.value);\n  };\n\n  const numberWithSpaces = x => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  };\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      <Formik\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n        initialValues={initialValues}\n      >\n        <Form autoComplete=\"off\">\n          <div className={s.form}>\n            <div className={s.inputWrapper}>\n              <Input\n                name=\"balance\"\n                title=\"From account\"\n                placeholder={`Account balance: ₴ ${numberWithSpaces(\n                  Math.round(balance)\n                )} `}\n                disabled={true}\n              />\n            </div>\n\n            <div className={s.inputWrapper}>\n              <TransactionSelect\n                onChange={onChange}\n                value={getValue()}\n                transformCategory={transformCategory}\n              />\n            </div>\n\n            <div className={s.inputWrapper}>\n              <Input\n                name=\"comment\"\n                title=\"Expense comment\"\n                placeholder=\"Enter comment\"\n              />\n              <ErrorMessage name=\"comment\">\n                {msg => <span className={s.errorSpan}>{msg}</span>}\n              </ErrorMessage>\n            </div>\n\n            <div className={s.inputWrapper}>\n              <Input name=\"sum\" title=\"Sum\" placeholder=\"00.00\" />\n              <ErrorMessage name=\"sum\">\n                {msg => <span className={s.errorSpan}>{msg}</span>}\n              </ErrorMessage>\n            </div>\n          </div>\n\n          <ExpensesLimits openModal={openModal} />\n        </Form>\n      </Formik>\n      {isModalOpen && (\n        <ModalAddIncome text=\"Enter income\" closeModal={closeModal} />\n      )}\n    </div>\n  );\n};\n\nexport default TransactionDataList;\n","import Container from 'components/Container/Container';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCategory, getPresaving } from 'redux/Expenses/expensesOperations';\nimport { selectorIsLoggedIn } from 'redux/auth/authSelectors';\nimport TransactionDataList from 'components/TransactionDataList/TransactionDataList';\nimport Section from 'components/Section/Section';\n\nconst ExpensesPage = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectorIsLoggedIn);\n  useEffect(() => {\n    isLoggedIn && dispatch(getCategory());\n    isLoggedIn && dispatch(getPresaving());\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <Section>\n      <Container>\n        <TransactionDataList />\n      </Container>\n    </Section>\n  );\n};\n\nexport default ExpensesPage;\n","export const presavingSelect = state => state.expenses.presaving;\nexport const categorySelect = state => state.expenses.category;\nexport const selectorIsCashflowLoading = state => state.expenses.isLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlayAddIncome\":\"MoadlAddIncome_overlayAddIncome__1P5D8\",\"modalWrapper\":\"MoadlAddIncome_modalWrapper__TwlUa\",\"modalAddIncome\":\"MoadlAddIncome_modalAddIncome__Od7vw\",\"modalInput\":\"MoadlAddIncome_modalInput__ZH85Z\",\"btnContainer\":\"MoadlAddIncome_btnContainer__ELtRK\",\"btnAdd\":\"MoadlAddIncome_btnAdd__dTtCU\",\"btnClose\":\"MoadlAddIncome_btnClose__nIubc\",\"btnSvg\":\"MoadlAddIncome_btnSvg__Q6jjo\",\"iconClose\":\"MoadlAddIncome_iconClose__owHnM\",\"categoryIcon\":\"MoadlAddIncome_categoryIcon__C4OJV\"};"],"names":["_ref","children","_jsx","className","s","Option","components","IconOption","props","_jsxs","Icon","name","data","value","width","height","secondaryClassName","c","categoryIcon","label","title","placeholder","disabled","htmlFor","Field","type","openModal","dailyLimit","monthLimit","totalByDay","totalByMounth","useSelector","presavingSelect","numberWithSpaces","x","toString","replace","Math","round","onClick","modalRoot","document","querySelector","closeModal","text","dispatch","useDispatch","closeModalByEscape","useCallback","e","code","useEffect","window","addEventListener","removeEventListener","createPortal","overlayAddIncome","target","currentTarget","modalWrapper","Formik","onSubmit","handleSubmit","values","actions","postTransaction","sum","resetForm","initialValues","Form","modalAddIncome","modalInput","btnContainer","btnAdd","btnClose","btnSvg","iconClose","transformCategory","onChange","Select","isSearchable","classNamePrefix","options","comment","category","schema","yup","shape","max","positive","required","TransactionDataList","currentCategory","setCurrentCategory","useState","isModalOpen","setIsModalOpen","isLoading","selectorIsCashflowLoading","categorySelect","balance","selectorBalance","map","Loader","Number","validationSchema","autoComplete","Input","TransactionSelect","newValue","find","ErrorMessage","msg","ExpensesLimits","ModalAddIncome","ExpensesPage","isLoggedIn","selectorIsLoggedIn","getCategory","getPresaving","Section","Container","state","expenses","presaving"],"sourceRoot":""}